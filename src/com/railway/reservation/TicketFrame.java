/*
 * Copyright 2019 kriticalflare.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.railway.reservation;

import com.railway.reservation.constants.Constants;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JButton;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

/**
 *
 * @author kriticalflare
 */
public class TicketFrame extends javax.swing.JFrame implements ActionListener {
    
    String s1, s2, s3, s4;
    int s5,s6;
    ResultSet rs;
    public String username;
    PreviousTicketForm pf;
    Vector arr = new Vector();
    String FinalFromStation = "";
    String FinalToStation = "";
    int fromStationIndex = -1;
    int toStationIndex = -1;
    int ticketQuantity = -1;
    int amount = -1;
    int berthCost = 0; // should be non zero only for first class

    /**
     * Creates new form TicketFrame
     */
    public TicketFrame() {
        initComponents();
        System.out.println(username + " from tf construct");
        
    }
    
    public TicketFrame(String username){
        initComponents();
        OkLeftButton.addActionListener(this);
        buttonBookTicket.addActionListener(this);
        RightSelectButton.addActionListener(this);
        try {
            Connection conn = DriverManager.getConnection(Constants.url, Constants.user, Constants.password);
            String URL = "Select id, sname FROM stations";
            rs = conn.createStatement().executeQuery(URL);
            while (rs.next()) {
                String str = rs.getString("sname");
                arr.add(str);
            }
            FromList.setListData(arr);
            ToList.setListData(arr);
        } catch (SQLException e) {
            System.out.println("Error at Ticketframe select from table stations");
        }
        this.username = username;
    }

    public void actionPerformed(ActionEvent e) {
        System.out.println(((JButton) e.getSource()).getText());
        if ("Select From".equals(((JButton) e.getSource()).getText())) {
            FinalFromStation = (String) FromList.getSelectedValue();
            fromStationIndex = FromList.getSelectedIndex();
            FromStationLabelField.setText(FinalFromStation);
        } else if ("Select To".equals(((JButton) e.getSource()).getText())) {
            FinalToStation = (String) ToList.getSelectedValue();
            toStationIndex = ToList.getSelectedIndex();
            ToStationLabelField.setText(FinalToStation);
        } else if ("Book it!".equals(((JButton) e.getSource()).getText())) {
            if (radioBerthType.isSelected()) {
                berthCost = 50;
            }
            int cost = calculateTicketAmount();
            if (cost != -1) {
                TotalCostLabel.setText(String.valueOf(cost));
                insert();
            } else {
                JOptionPane.showMessageDialog(null, "Complete all the fields!");
            }
//            System.exit(0);
        } 

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ticketsHeader = new javax.swing.JLabel();
        labelBoarding = new javax.swing.JLabel();
        labelAlighting = new javax.swing.JLabel();
        labelBerth = new javax.swing.JLabel();
        labelQuantity = new javax.swing.JLabel();
        buttonBookTicket = new javax.swing.JButton();
        fromLabel = new javax.swing.JLabel();
        ToLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        FromList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        ToList = new javax.swing.JList<>();
        FromStationLabelField = new javax.swing.JLabel();
        ToStationLabelField = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        OkLeftButton = new javax.swing.JButton();
        RightSelectButton = new javax.swing.JButton();
        TotalCostLabel = new javax.swing.JLabel();
        textTicketQuantity = new javax.swing.JTextField();
        radioBerthType = new javax.swing.JRadioButton();
        buttonPreviousTicket = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ticketsHeader.setText("Book Tickets");

        labelBoarding.setText("Boarding Station");

        labelAlighting.setText("Alighting Station");

        labelBerth.setText("First Class");

        labelQuantity.setText("Quantity");

        buttonBookTicket.setText("Book it!");
        buttonBookTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBookTicketActionPerformed(evt);
            }
        });

        fromLabel.setText("From");

        ToLabel.setText("To");

        FromList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(FromList);

        ToList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(ToList);

        jLabel1.setText("Total Cost");

        OkLeftButton.setText("Select From");
        OkLeftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkLeftButtonActionPerformed(evt);
            }
        });

        RightSelectButton.setText("Select To");

        TotalCostLabel.setText("0");

        textTicketQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTicketQuantityActionPerformed(evt);
            }
        });

        radioBerthType.setText("Yes");

        buttonPreviousTicket.setText("View previous tickets");
        buttonPreviousTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPreviousTicketActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FromStationLabelField)
                            .addComponent(RightSelectButton)
                            .addComponent(ToStationLabelField)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelQuantity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textTicketQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TotalCostLabel)
                                .addGap(38, 38, 38))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelBerth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radioBerthType)
                                .addGap(22, 22, 22))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelAlighting)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addComponent(buttonBookTicket)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(labelBoarding)
                                    .addGap(60, 60, 60)))
                            .addComponent(OkLeftButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonPreviousTicket)
                .addGap(117, 117, 117))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ticketsHeader)
                .addGap(157, 157, 157))
            .addGroup(layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(fromLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ToLabel)
                .addGap(102, 102, 102))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ticketsHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromLabel)
                    .addComponent(ToLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RightSelectButton)
                    .addComponent(OkLeftButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBoarding)
                    .addComponent(FromStationLabelField))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAlighting)
                    .addComponent(ToStationLabelField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelBerth)
                    .addComponent(radioBerthType))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelQuantity)
                    .addComponent(textTicketQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TotalCostLabel))
                .addGap(24, 24, 24)
                .addComponent(buttonBookTicket)
                .addGap(34, 34, 34)
                .addComponent(buttonPreviousTicket)
                .addGap(125, 125, 125))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBookTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBookTicketActionPerformed
       
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonBookTicketActionPerformed

    private void OkLeftButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_OkLeftButtonActionPerformed
    {//GEN-HEADEREND:event_OkLeftButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OkLeftButtonActionPerformed

    private void textTicketQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTicketQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTicketQuantityActionPerformed

    private void buttonPreviousTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPreviousTicketActionPerformed
        openPrevTicketFrame();
    }//GEN-LAST:event_buttonPreviousTicketActionPerformed
    
    private void openPrevTicketFrame() {
        setVisible(false);
        new PreviousTicketForm(username).setVisible(true);
    }
    private int calculateTicketAmount() {
        if (fromStationIndex == -1 || toStationIndex == -1 || textTicketQuantity.getText().equals("")) {
            System.out.println(fromStationIndex + " " + toStationIndex + " " + ticketQuantity + " " + textTicketQuantity.getText());
            return -1;
        } else {
            ticketQuantity = Integer.parseInt(textTicketQuantity.getText());
            int difference = fromStationIndex - toStationIndex;
            amount = ticketQuantity * ((Math.abs(difference)) * 5 + berthCost);
            return amount;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicketFrame().setVisible(true);
            }
        });
    }
    
     public void insert() {
        int x = 0;
        s1=username;
        s2 = FromStationLabelField.getText();
        s3 = ToStationLabelField.getText();
        if(berthCost == 50){
            s4 = "First Class";
        } else {
            s4 = "Second Class";
        }
        s5 = Integer.parseInt(textTicketQuantity.getText());
        s6 = Integer.parseInt(TotalCostLabel.getText());
       
        try {
            System.out.println(Constants.password);
            Connection con = DriverManager.getConnection(Constants.url, Constants.user, Constants.password);
            PreparedStatement ps = con.prepareStatement("insert into ticket values (?,?,?,?,?,?)");
            ps.setString(1, s1);
            ps.setString(2, s2);
            ps.setString(3, s3);
            ps.setString(4,s4);
            ps.setInt(5, s5);
            ps.setInt(6,s6);
            ps.executeUpdate();
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> FromList;
    public javax.swing.JLabel FromStationLabelField;
    private javax.swing.JButton OkLeftButton;
    private javax.swing.JButton RightSelectButton;
    private javax.swing.JLabel ToLabel;
    private javax.swing.JList<String> ToList;
    public javax.swing.JLabel ToStationLabelField;
    private javax.swing.JLabel TotalCostLabel;
    private javax.swing.JButton buttonBookTicket;
    private javax.swing.JButton buttonPreviousTicket;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelAlighting;
    private javax.swing.JLabel labelBerth;
    private javax.swing.JLabel labelBoarding;
    private javax.swing.JLabel labelQuantity;
    private javax.swing.JRadioButton radioBerthType;
    private javax.swing.JTextField textTicketQuantity;
    private javax.swing.JLabel ticketsHeader;
    // End of variables declaration//GEN-END:variables
}
